((theorem prop_congr (eq b bquo)) (theorem is_true_true (true)) (theorem not_false_is_true (not false)) (theorem is_true_locked_true (locked true)) (theorem negbT (negb b)) (theorem negbTE (eq b false)) (theorem negbF (eq (negb b) false)) (theorem negbFE (b)) (theorem negbK (involutive negb)) (theorem negbNE (b)) (theorem negb_inj (injective negb)) (theorem negbLR (eq (negb b) c)) (theorem negbRL (eq b (negb c))) (theorem contra (negb c)) (theorem contraL (negb c)) (theorem contraR (c)) (theorem contraLR (c)) (theorem contraT (b)) (theorem wlog_neg (b)) (theorem contraFT (c)) (theorem contraFN (negb c)) (theorem contraTF (eq c false)) (theorem contraNF (eq c false)) (theorem contraFF (eq c false)) (theorem ifP (vT)) (theorem ifPn (vT)) (theorem if_same (vT)) (theorem if_neg (vT)) (theorem fun_if (vT)) (theorem if_arg (fT)) (theorem ifE (vT)) (theorem introNTF (eq (negb b) c)) (theorem introTF (eq b c)) (theorem elimNTF (not P)) (theorem elimTF (P)) (theorem equivPif (Q)) (theorem xorPif (not Q)) (theorem introTFn (eq b c)) (theorem elimTFn (not P)) (theorem equivPifn (not Q)) (theorem xorPifn (Q)) (theorem introT (b)) (theorem introF (eq b false)) (theorem introN (negb b)) (theorem introNf (eq (negb b) false)) (theorem introTn (bquo)) (theorem introFn (eq bquo false)) (theorem elimT (P)) (theorem elimF (not P)) (theorem elimN (not P)) (theorem elimNf (P)) (theorem elimTn (not P)) (theorem elimFn (P)) (theorem introP (reflect Q b)) (theorem iffP (reflect Q b)) (theorem equivP (reflect Q b)) (theorem sumboolP (reflect Q decQ)) (theorem appP (Q)) (theorem sameP (eq b c)) (theorem decPcases (P)) (theorem altP (alt_spec b)) (theorem bind_unless (unless (unless C Q) P)) (theorem unless_contra (unless C b)) (theorem classicP (iff (classically P) (not (not P)))) (theorem classic_bind (classically Q)) (theorem classic_EM (classically (decidable P))) (theorem classic_imply (Q)) (theorem idP (reflect b1 b1)) (theorem boolP (alt_spec b1 b1 b1)) (theorem idPn (reflect (negb b1) (negb b1))) (theorem negP (reflect (not b1) (negb b1))) (theorem negPn (reflect b1 (negb (negb b1)))) (theorem negPf (reflect (eq b1 false) (negb b1))) (theorem andP (reflect (and b1 b2) (andb b1 b2))) (theorem and3P (reflect (and3 b1 b2 b3) (andb b1 (andb b2 b3)))) (theorem and4P (reflect (and4 b1 b2 b3 b4) (andb b1 (andb b2 (andb b3 b4))))) (theorem and5P (reflect (and5 b1 b2 b3 b4 b5) (andb b1 (andb b2 (andb b3 (andb b4 b5)))))) (theorem orP (reflect (or b1 b2) (orb b1 b2))) (theorem or3P (reflect (or3 b1 b2 b3) (orb b1 (orb b2 b3)))) (theorem or4P (reflect (or4 b1 b2 b3 b4) (orb b1 (orb b2 (orb b3 b4))))) (theorem nandP (reflect (or (negb b1) (negb b2)) (negb (andb b1 b2)))) (theorem norP (reflect (and (negb b1) (negb b2)) (negb (orb b1 b2)))) (theorem implyP (b2)) (theorem andTb (left_id true andb)) (theorem andFb (left_zero false andb)) (theorem andbT (right_id true andb)) (theorem andbF (right_zero false andb)) (theorem andbb (idempotent andb)) (theorem andbC (commutative andb)) (theorem andbA (associative andb)) (theorem andbCA (left_commutative andb)) (theorem andbAC (right_commutative andb)) (theorem andbACA (interchange andb andb)) (theorem orTb (orb true b)) (theorem orFb (left_id false orb)) (theorem orbT (orb b true)) (theorem orbF (right_id false orb)) (theorem orbb (idempotent orb)) (theorem orbC (commutative orb)) (theorem orbA (associative orb)) (theorem orbCA (left_commutative orb)) (theorem orbAC (right_commutative orb)) (theorem orbACA (interchange orb orb)) (theorem andbN (eq (andb b (negb b)) false)) (theorem andNb (eq (andb (negb b) b) false)) (theorem orbN (eq (orb b (negb b)) true)) (theorem orNb (eq (orb (negb b) b) true)) (theorem andb_orl (left_distributive andb orb)) (theorem andb_orr (right_distributive andb orb)) (theorem orb_andl (left_distributive orb andb)) (theorem orb_andr (right_distributive orb andb)) (theorem andb_idl (eq (andb a b) b)) (theorem andb_idr (eq (andb a b) a)) (theorem andb_id2l (eq (andb a b) (andb a c))) (theorem andb_id2r (eq (andb a b) (andb c b))) (theorem orb_idl (eq (orb a b) b)) (theorem orb_idr (eq (orb a b) a)) (theorem orb_id2l (eq (orb a b) (orb a c))) (theorem orb_id2r (eq (orb a b) (orb c b))) (theorem negb_and (eq (negb (andb a b)) (orb (negb a) (negb b)))) (theorem negb_or (eq (negb (orb a b)) (andb (negb a) (negb b)))) (theorem andbK (eq (orb (andb a b) a) a)) (theorem andKb (eq (orb a (andb b a)) a)) (theorem orbK (eq (andb (orb a b) a) a)) (theorem orKb (eq (andb a (orb b a)) a)) (theorem implybT (implb b true)) (theorem implybF (eq (implb b false) (negb b))) (theorem implyFb (implb false b)) (theorem implyTb (eq (implb true b) b)) (theorem implybb (implb b b)) (theorem negb_imply (eq (negb (implb a b)) (andb a (negb b)))) (theorem implybE (eq (implb a b) (orb (negb a) b))) (theorem implyNb (eq (implb (negb a) b) (orb a b))) (theorem implybN (eq (implb a (negb b)) (implb b (negb a)))) (theorem implybNN (eq (implb (negb a) (negb b)) (implb b a))) (theorem implyb_idl (eq (implb a b) b)) (theorem implyb_idr (eq (implb a b) (negb a))) (theorem implyb_id2l (eq (implb a b) (implb a c))) (theorem addFb (left_id false addb)) (theorem addbF (right_id false addb)) (theorem addbb (self_inverse false addb)) (theorem addbC (commutative addb)) (theorem addbA (associative addb)) (theorem addbCA (left_commutative addb)) (theorem addbAC (right_commutative addb)) (theorem addbACA (interchange addb addb)) (theorem andb_addl (left_distributive andb addb)) (theorem andb_addr (right_distributive andb addb)) (theorem addKb (bool => x)) (theorem addbK (bool => x)) (theorem addIb (left_injective addb)) (theorem addbI (right_injective addb)) (theorem addTb (eq (addb true b) (negb b))) (theorem addbT (eq (addb b true) (negb b))) (theorem addbN (eq (addb a (negb b)) (negb (addb a b)))) (theorem addNb (eq (addb (negb a) b) (negb (addb a b)))) (theorem addbP (reflect (eq (negb a) b) (addb a b))) (theorem subrelUl (subrel r1 (relU r1 r2))) (theorem subrelUr (subrel r2 (relU r1 r2))) (theorem sub_refl (sub_mem p p)) (theorem mem_topred (eq (mem (topred pp)) (mem pp))) (theorem topredE (eq (topred pp x) (in_mem x (mem pp)))) (theorem app_predE (eq (ap x) (in_mem x (mem p)))) (theorem in_applicative (eq (in_mem x amp) (p x))) (theorem in_collective (eq (in_mem x (mem msp)) (p x))) (theorem in_simpl (eq (in_mem x (Mem (fun x0 => (msp:simpl_pred T) x0))) (p x))) (theorem unfold_in (eq (in_mem x (mem (id_head tt p))) (p x))) (theorem simpl_predE (eqfun (SimplPred p) p)) (theorem mem_simpl (eq (mem sp) sp)) (theorem mem_mem (prod (eq (mem (mem pp)) (mem pp)) (eq (mem (mem pp)) (mem pp)))) (theorem qualifE (eq (in_mem x (mem (Qualifier n p))) (p x))) (theorem keyed_predE (eq_mem (mem k_p) (mem p))) (theorem KeyedQualifier (keyed_qualifier k)) (theorem symmetric_from_pre (symmetric)) (theorem sym_left_transitive (left_transitive)) (theorem sym_right_transitive (right_transitive)) (theorem equivalence_relP (iff equivalence_rel (and reflexive left_transitive))) (theorem rev_trans (transitive (fun x y : T => R y x))))