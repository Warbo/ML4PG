# ML4PG usage instructions #

ML4PG performs machine learning on Coq proof scripts, finding similarities in
theorems/lemmas/etc. and clustering them. For more information, see
ml4pg_manual.pdf

## Quick Start ##

ML4PG is maintained at https://gitorious.org/ml4pg where you can check out the
latest version using git.

Once you've downloaded ML4PG, the easiest way to use it is via the Nix package
manager. If your operating system doesn't provide Nix, you can get it manually
from http://nixos.org/nix

Once you have Nix installed, open a terminal in the top-level ML4PG directory
and run:

    nix-shell --pure

This will tell Nix to download and install all of ML4PG's dependencies, then
open a shell with these dependencies available.

NOTE: These dependencies will *not* conflict with any existing software. They
will be installed into standalone directories and made available to the shell
via environment variables. The packages will also be cached, to prevent
downloading them every time. For more information, see the Nix Web site.

## Slow Start ##

For those who don't want to use Nix, or want to know a little about what it's
doing. These details are just an English prose version of `default.nix`.

### Dependencies ###

 - Emacs
 - ProofGeneral
 - Coq
 - Java runtime
 - Graphviz

ML4PG runs inside Emacs, on top of ProofGeneral. Although ProofGeneral works
with several languages/proof systems, ML4PG will only work with Coq.

The machine learning is performed by Weka, which is included, but Weka requires
a Java runtime to work.

Graphviz is used to generate the output.

### Environment ###

ML4PG uses the environment variable `ML4PG_HOME` to find its code.

## Running ML4PG ##

Once you have a shell with the dependencies available and ML4PG_HOME set,
whether by Nix or otherwise, you can start ML4PG. There are several ways to do
this:

### Testing ###

ML4PG comes with an automated test suite, which you can use to verify that it's
installed and working. The following command will run all tests:

    emacs --script test/runner.el

### Interactive usage ###

You can launch Emacs with ML4PG available like this:

    emacs -l ml4pg.el

If you already have Emacs running, you can use the following snippet to load
ML4PG:

    (load-file "ml4pg.el")

Either way, you can then open a Coq file and ML4PG will provide a `Statistics`
menu of commands you can run.

You can also specify your Coq file via the commandline:

    emacs -l ml4pg.el --file my_script.v

### Non-interactive usage ###

ML4PG can be run from the commandline non-interactively. To do this, use Emacs
in "batch mode":

    emacs --batch -l ml4pg.el

That command will launch Emacs, load ML4PG, then exit. You probably want to do
something else after it's loaded, which should be provided as Emacs Lisp.

You can do this with the `--eval` option for an in-line snippet, or with the
`-l` or `--script` options for a file containing Emacs Lisp.
